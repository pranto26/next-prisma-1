// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String
  lastName String
  email String @unique
  mobile String
  otp String
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  customers customers[]
  categories categories[]
  products products[]
  invoices invoices[]
  invoice_products invoice_products[]


}

model customers{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name String
  email String
  mobile String
  user_id BigInt @db.UnsignedBigInt
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt

  users users @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoices invoices[]
}

model categories{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name String
  user_id BigInt @db.UnsignedBigInt
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  users users @relation(fields: [user_id], references: [id], onDelete: Restrict,onUpdate: Cascade)
  products products[]
}

model products{
   id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
   user_id BigInt @db.UnsignedBigInt
   category_id BigInt @db.UnsignedBigInt
   name String 
   price String
   unit String
   img_url String
   created_at DateTime @default(now()) @db.Timestamp(0)
   updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
   

   users users @relation(fields: [user_id], references: [id], onDelete: Restrict,onUpdate: Cascade)
   categories categories @relation(fields: [category_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
   invoice_products invoice_products?
   
}

model invoices{
   id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
   total String
   vat String
   payable String
   user_id BigInt @db.UnsignedBigInt
   customer_id BigInt @db.UnsignedBigInt
   created_at DateTime @default(now()) @db.Timestamp(0)
   updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt

   users users @relation(fields: [user_id], references: [id], onDelete: Restrict,onUpdate: Cascade)
   customers customers @relation(fields: [customer_id], references: [id], onDelete: Restrict,onUpdate: Cascade)
   invoice_products invoice_products[]


}

model invoice_products{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt @db.UnsignedBigInt
  product_id BigInt @unique @db.UnsignedBigInt
  user_id BigInt @db.UnsignedBigInt
  qty String
  sale_price String
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt

  products products @relation(fields: [product_id], references: [id], onDelete: Restrict,onUpdate: Cascade)
  users users @relation(fields: [user_id], references: [id], onDelete: Restrict,onUpdate: Cascade)
  invoices invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict,onUpdate: Cascade)

}




